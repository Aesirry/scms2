# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-01-12 13:56
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import scms2.blocks
import wagtail.contrib.table_block.blocks
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtaildocs.blocks
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('articles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleContainer',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Artikelordner',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ArticleIndexByYearPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ArticlesIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Artikelliste',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterModelOptions(
            name='articlepage',
            options={'verbose_name': 'Artikel'},
        ),
        migrations.AddField(
            model_name='articlepage',
            name='anriss',
            field=wagtail.wagtailcore.fields.StreamField((('paragraph', scms2.blocks.Absatz(label='Textabsatz')), ('fotoalbum', wagtail.wagtailcore.blocks.StructBlock((('album', wagtail.wagtailcore.blocks.PageChooserBlock(label='Fotoalbum auswählen', required=True, target_model=['fotoalben.Fotoalbum'])), ('show_as', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('single', 'Einzelnes Bild'), ('carousel', 'Bilderkarussell')], help_text='Wie soll das Fotoalbum angezeigt werden?', label='Anzeige als')), ('auto_caption', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Soll die Bildunterschrift automatisch aus den Informationen für das Bild generiert werden?', label='Automatische Bildunterschrift', required=False)), ('caption', wagtail.wagtailcore.blocks.CharBlock(label='Manuelle Bildunterschrift', max_length=256, required=False)), ('style', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('full', 'Volle Breite'), ('left_sm', 'klein, links im Text'), ('left_med', 'mittelgroß, links im Text'), ('right_sm', 'klein, rechts im Text'), ('right_med', 'mittelgroß, rechts im Text')], help_text='Bei Anzeige als Einzelbild: Wo soll das Bild platziert werden?', required=False, verbose_name='Anzeigeoptionen')), ('link', wagtail.wagtailcore.blocks.BooleanBlock(default=True, help_text='Link zum Album einfügen?', required=False, verbose_name='Link'))))), ('image', wagtail.wagtailcore.blocks.StructBlock((('img', wagtail.wagtailimages.blocks.ImageChooserBlock(required=True)), ('align', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('LINKS', 'links'), ('LINKS_SM', 'links, kleiner'), ('RECHTS', 'rechts'), ('RECHTS_SM', 'rechts, kleiner'), ('FULL', 'ganze Breite')], help_text='Wie soll das Bild angezeigt werden?', label='Ausrichtung und Größe')), ('beschriftung', wagtail.wagtailcore.blocks.TextBlock(help_text='Dieser Text wird unterhalb des Bilds eingefügt', required=False))), label='Bild'))), blank=True, null=True),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='autor',
            field=models.CharField(blank=True, help_text='Wenn dieses Feld leer gelassen wird, wirst du als Autor gelistet.', max_length=128, null=True, verbose_name='Autor des Texts'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='datum',
            field=models.DateField(blank=True, help_text='Wenn dieses Feld freigelassen wird, wird das aktuelle Datum verwendet (außer, es wird eine spätere Veröffentlichung eingestellt).', null=True, verbose_name='angezeigtes Datum der Veröffentlichung'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='enddatum',
            field=models.DateField(blank=True, help_text='In einigen älteren Artikeln wurde für Berichte über mehrtägige Veranstaltungen der Zeitraum der Veranstaltung als angezeigtes Datum gewählt. Hier kann für solche fälle das Enddatum eingestellt werden.', null=True, verbose_name='angezeigtes Enddatum der Veröffentlichung'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.wagtailcore.fields.StreamField((('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title', group='Allgemeine Texte', icon='fa fa-header', label='Überschrift', template='seiten/blocks/heading.html')), ('paragraph', scms2.blocks.Absatz(group='Allgemeine Texte')), ('image', wagtail.wagtailcore.blocks.StructBlock((('img', wagtail.wagtailimages.blocks.ImageChooserBlock(required=True)), ('align', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('LINKS', 'links'), ('LINKS_SM', 'links, kleiner'), ('RECHTS', 'rechts'), ('RECHTS_SM', 'rechts, kleiner'), ('FULL', 'ganze Breite')], help_text='Wie soll das Bild angezeigt werden?', label='Ausrichtung und Größe')), ('beschriftung', wagtail.wagtailcore.blocks.TextBlock(help_text='Dieser Text wird unterhalb des Bilds eingefügt', required=False))), group='Fotos und Bilder')), ('img_citation', wagtail.wagtailcore.blocks.StructBlock((('img', wagtail.wagtailimages.blocks.ImageChooserBlock(label='Bild', required=True)), ('zitat', wagtail.wagtailcore.blocks.CharBlock(label='Text', max_length=256, required=True))), group='Fotos und Bilder')), ('fotoalbum2', wagtail.wagtailcore.blocks.StructBlock((('album', wagtail.wagtailcore.blocks.PageChooserBlock(label='Fotoalbum auswählen', required=True, target_model=['fotoalben.Fotoalbum'])), ('show_as', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('single', 'Einzelnes Bild'), ('carousel', 'Bilderkarussell')], help_text='Wie soll das Fotoalbum angezeigt werden?', label='Anzeige als')), ('auto_caption', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Soll die Bildunterschrift automatisch aus den Informationen für das Bild generiert werden?', label='Automatische Bildunterschrift', required=False)), ('caption', wagtail.wagtailcore.blocks.CharBlock(label='Manuelle Bildunterschrift', max_length=256, required=False)), ('style', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('full', 'Volle Breite'), ('left_sm', 'klein, links im Text'), ('left_med', 'mittelgroß, links im Text'), ('right_sm', 'klein, rechts im Text'), ('right_med', 'mittelgroß, rechts im Text')], help_text='Bei Anzeige als Einzelbild: Wo soll das Bild platziert werden?', required=False, verbose_name='Anzeigeoptionen')), ('link', wagtail.wagtailcore.blocks.BooleanBlock(default=True, help_text='Link zum Album einfügen?', required=False, verbose_name='Link'))), group='Fotos und Bilder')), ('bilderliste', scms2.blocks.ImgListBlock(group='Fotos und Bilder', label='Fotoliste')), ('blockquote', scms2.blocks.QuoteBlock(group='Spezielle Texte')), ('komplexe_liste', scms2.blocks.ComplexListBlock(group='Spezielle Texte')), ('video', scms2.blocks.YoutubeBlock(group='Videos')), ('local_video', wagtail.wagtailcore.blocks.StructBlock((('standard', wagtail.wagtaildocs.blocks.DocumentChooserBlock(help_text='Video-Datei für standarkonforme Browser (Container webm, Codec: V8.0, Audio: Ogg)', label='Standard-Datei')), ('alt1', wagtail.wagtaildocs.blocks.DocumentChooserBlock(help_text='alternative Video-Datei (bspw. für Apple-Safari: Container mp4, Codec: H.264, Audio)', label='Alternative 1', required=False)), ('alt2', wagtail.wagtaildocs.blocks.DocumentChooserBlock(help_text='alternative Video-Datei (bspw. für Internet-Explorer)', label='Alternative 2', required=False))), group='Videos')), ('strophe', scms2.blocks.Strophe(group='Spezielle Texte')), ('video_carousel', scms2.blocks.VideoCarouselBlock(group='Videos')), ('table', wagtail.contrib.table_block.blocks.TableBlock(group='Allgemeine Texte', label='Tabelle'))), verbose_name='Inhalt'),
        ),
    ]
